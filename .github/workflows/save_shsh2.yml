name: Auto Save SHSH2
permissions: write-all # Allow Release 允许发布 release
env:
  MODEL: iPhone8,1 # required
  # choosing one of these three below and comment others
  LATEST: true # if set true, FIRMWARE_VERSION and FIRMWARE_BUILD_ID will become invalid
  FIRMWARE_VERSION: 15.7
  FIRMWARE_BUILD_ID: 19H12 # if set this, FIRMWARE_VERSION will become invalid
  # 
  NO_BOARDBAND: false # if set true, BOARDBAND will become invalid
  BOARDBAND: n71ap # recommend set this for iPhone
  # 
  ECID: ab46efcbf71 # must be either DEC or HEX
  GEN: "0x1111111111111111" # manually specify generator in format 0x%%16llx
  APNONCE: "" # required for saving blobs for A12/S4 and newer devices with generator
  # Enable the following options to use beta firmware
  OTA: true
  BETA: true
  # Logging
  LOG_REQ: false # print the TSS request that will be sent to Apple
  LOG_RSP: false # print the TSS response that comes from Apple
  LOG_RAW: false # send raw file to Apple's TSS server (useful for debugging)


on:
  # schedule:
  #   - cron: '20 5 * * 3' # Every Wednesday at 5:20
  workflow_dispatch:
    inputs:
      args:
        description: 'Manual Arguments(Will use args here)'
        required: true
        default: "-d iPhone6,2 -B n53ap -e 6F40A4CD908 -l -s --save-path .\\blobs --print-tss-request --print-tss-response"

jobs:
  save_shsh2:
    runs-on: windows-2022
    steps:
      - uses: actions/checkout@v2

      - name: prepare (auto)
        if: github.event.inputs == 0
        run: |
          echo "auto"

      - name: prepare (manually)
        if: github.event.inputs
        run: |
          echo "manually"

      - name: run tsschecker
        shell: pwsh
        run: |
          if(!(Test-Path "blobs")) { mkdir "blobs" }
          .\\tsschecker378.exe ${{ github.event.inputs.args }}
      
      - name: get info
        id: shsh2-info
        shell: bash
        run: |
          output=`ls blobs`
          if [ -z $output ]; then
            echo "blobs folder is empty!"
            exit 1
          fi
          echo firmware=`echo ${output} | awk -F '_' '{print $4}'` >> $GITHUB_OUTPUT
          echo nonce=`echo ${output} | awk -F '_' '{print $5}' | awk -F '.' '{print $1}'` >> $GITHUB_OUTPUT
          echo ${{ steps.shsh2-info.outputs.nonce }}

      - uses: actions/upload-artifact@v2
        with:
          name: ${{ steps.shsh2-info.outputs.nonce }}
          path: blobs/*  
